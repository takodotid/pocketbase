name: Build vanilla PocketBase image

on:
  push:
    branches:
      - main
    paths:
      - "vanilla/Dockerfile"
      - ".github/workflows/vanilla.yaml"

permissions:
  contents: read
  packages: write

jobs:
  build:
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.platform }}
      cancel-in-progress: true
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            runs-on: ubuntu-24.04
          - platform: linux/arm64
            runs-on: ubuntu-24.04-arm
          - platform: linux/arm/v7
            runs-on: ubuntu-24.04-arm
          - platform: linux/ppc64le
            runs-on: ubuntu-24.04
          - platform: linux/s390x
            runs-on: ubuntu-24.04
    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Check Out Repository
        uses: actions/checkout@v4.2.2

      - name: Set up platform pairs
        id: platform
        run: |
          platform=${{ matrix.platform }}
          echo "pair=${platform//\//-}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.10.0

      - name: Generate Docker image metadata
        id: meta
        uses: docker/metadata-action@v5.7.0
        with:
          images: ghcr.io/takodotid/pocketbase

      - name: Login to GitHub Container Registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6.16.0
        with:
          context: ./vanilla
          file: ./vanilla/Dockerfile
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,"name=ghcr.io/takodotid/pocketbase",push-by-digest=true,name-canonical=true,push=${{ github.event_name == 'push' }}

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4.6.2
        with:
          name: digests-${{ steps.platform.outputs.pair }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

      - name: Get PocketBase version in Dockerfile
        id: pocketbase
        run: |
          export VERSION=$(cat ./Dockerfile | sed -n 's/.*PB_VERSION=\([0-9.]*\).*/\1/p')
          echo "MAJOR=$(echo $VERSION | cut -d . -f1)" >> $GITHUB_OUTPUT
          echo "MINOR=$(echo $VERSION | cut -d . -f2)" >> $GITHUB_OUTPUT
          echo "PATCH=$(echo $VERSION | cut -d . -f3)" >> $GITHUB_OUTPUT

    outputs:
      MAJOR: ${{ steps.pocketbase.outputs.MAJOR }}
      MINOR: ${{ steps.pocketbase.outputs.MINOR }}
      PATCH: ${{ steps.pocketbase.outputs.PATCH }}

  merge:
    runs-on: ubuntu-24.04
    needs: [build]
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4.3.0
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to GitHub Container Registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0

      - name: Get current unix timestamp
        id: timestamp
        uses: release-kit/unix-timestamp@v1.0.0

      - name: Generate Docker image metadata
        uses: docker/metadata-action@v5.7.0
        id: meta
        with:
          images: ghcr.io/takodotid/pocketbase
          tags: |
            ${{ needs.build.outputs.MAJOR }}
            ${{ needs.build.outputs.MAJOR }}.${{ needs.build.outputs.MINOR }}
            ${{ needs.build.outputs.MAJOR }}.${{ needs.build.outputs.MINOR }}.${{ needs.build.outputs.PATCH }}

            ${{ needs.build.outputs.MAJOR }}-${{ steps.timestamp.outputs.timestamp }}
            ${{ needs.build.outputs.MAJOR }}.${{ needs.build.outputs.MINOR }}-${{ steps.timestamp.outputs.timestamp }}
            ${{ needs.build.outputs.MAJOR }}.${{ needs.build.outputs.MINOR }}.${{ needs.build.outputs.PATCH }}-${{ steps.timestamp.outputs.timestamp }}

            type=sha,prefix=,suffix=,format=short
            type=sha,prefix=,suffix=,format=long

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf 'ghcr.io/takodotid/pocketbase@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ghcr.io/takodotid/pocketbase:${{ steps.meta.outputs.version }}